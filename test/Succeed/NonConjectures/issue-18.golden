ret > ExitSuccess
out > Qname: Issue18._,_-0
out > Type: El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.D []}) (NoAbs "_" El {_getSort = Type (Max [ClosedLevel 1]), unEl = Sort (Type (Max []))})}) (Abs "A" El {_getSort = Type (Max []), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.∃ [Apply ωru(Var 0 [])]}) (Abs "d" El {_getSort = Type (Max []), unEl = Def Issue18.D []})})}
out >
out > Qname: Issue18._,_-1
out > Type: El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.D []}) (NoAbs "_" El {_getSort = Type (Max [ClosedLevel 1]), unEl = Sort (Type (Max []))})}) (Abs "A" El {_getSort = Type (Max []), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.∃ [Apply ωru(Var 0 [])]}) (Abs "d" El {_getSort = Type (Max []), unEl = Var 1 [Apply ωru(Def Issue18._,_-0 [Apply ωru(Var 0 [])])]})})}
out >
out > Qname: Issue18.comp-∃
out > Type: El {_getSort = Inf, unEl = Pi ωru(El {_getSort = Inf, unEl = Pi ωru(El {_getSort = Inf, unEl = Def Agda.Primitive.Cubical.I []}) (Abs "i" El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.D []}) (NoAbs "_" El {_getSort = Type (Max [ClosedLevel 1]), unEl = Sort (Type (Max []))})})}) (Abs "A" El {_getSort = Inf, unEl = Pi ωru(El {_getSort = Inf, unEl = Def Agda.Primitive.Cubical.I []}) (Abs "phi" El {_getSort = Inf, unEl = Pi ωru(El {_getSort = Inf, unEl = Pi ωru(El {_getSort = Inf, unEl = Def Agda.Primitive.Cubical.I []}) (Abs "i" El {_getSort = Inf, unEl = Pi ω.u(El {_getSort = Inf, unEl = Def Agda.Primitive.Cubical.IsOne [Apply ωru(Var 1 [])]}) (Abs "o" El {_getSort = Type (Max []), unEl = Def Issue18.∃ [Apply ωru(Var 3 [Apply ωru(Var 1 [])])]})})}) (NoAbs "_" El {_getSort = Type (Max []), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.∃ [Apply ωru(Var 1 [Apply ωru(Con (ConHead {conName = Agda.Primitive.Cubical.i0, conInductive = inductive, conFields = []}) ConOSystem [])])]}) (NoAbs "_" El {_getSort = Type (Max []), unEl = Def Issue18.∃ [Apply ωru(Var 1 [Apply ωru(Con (ConHead {conName = Agda.Primitive.Cubical.i1, conInductive = inductive, conFields = []}) ConOSystem [])])]})})})})}
out >
out > Qname: Issue18.D
out > Type: El {_getSort = Type (Max [ClosedLevel 1]), unEl = Sort (Type (Max []))}
out >
out > Qname: Issue18.∃
out > Type: El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.D []}) (NoAbs "_" El {_getSort = Type (Max [ClosedLevel 1]), unEl = Sort (Type (Max []))})}) (NoAbs "A" El {_getSort = Type (Max [ClosedLevel 1]), unEl = Sort (Type (Max []))})}
out >
out > Qname: Issue18.∃._,_
out > Type: El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru{El {_getSort = Type (Max [ClosedLevel 1]), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.D []}) (NoAbs "_" El {_getSort = Type (Max [ClosedLevel 1]), unEl = Sort (Type (Max []))})}} (Abs "A" El {_getSort = Type (Max []), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Def Issue18.D []}) (Abs "witness" El {_getSort = Type (Max []), unEl = Pi ωru(El {_getSort = Type (Max []), unEl = Var 1 [Apply ωru(Var 0 [])]}) (NoAbs "_" El {_getSort = Type (Max []), unEl = Def Issue18.∃ [Apply ωru(Var 1 [])]})})})}
out >
out >
