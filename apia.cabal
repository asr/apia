name:          apia
version:       1.0.1
build-type:    Simple
cabal-version: >= 1.10
author:        Andrés Sicard-Ramírez with contributions by Jonathan Prieto-Cubides
license:       MIT
license-file:  LICENSE
maintainer:    Andrés Sicard-Ramírez <asr@eafit.edu.co>
category:      Dependent types
homepage:      https://github.com/asr/apia
bug-reports:   https://github.com/asr/apia/issues/
synopsis:      Program for proving first-order formulae written in Agda using ATPs
tested-with:   GHC == 8.2.1
               GHC == 8.0.2
               GHC == 7.10.3
               GHC == 7.8.4
               GHC == 7.6.3
description:
  This package provides a program for proving first-order
  theorems written in the dependently typed language Agda
  <http://wiki.portal.chalmers.se/agda/pmwiki.php> using first-order
  automatic theorem provers (ATPs), via the translation of the Agda
  formulae to the TPTP format which is a standard for input and output
  for the ATPs <http://www.cs.miami.edu/~tptp/>.
extra-source-files:
        src/Apia/undefined.h
        README.md

data-dir:   src/data
data-files: apia.yml

source-repository head
  type:     git
  location: git://github.com/asr/apia.git

executable apia
  main-is:            Apia/Main.hs
  hs-source-dirs:     src
  include-dirs:       src/Apia
  default-language:   Haskell2010
  default-extensions: NoImplicitPrelude

  build-depends:   Agda == 2.6.0.1
                 , base >= 4.6.0.1 && < 4.11
                 , bytestring >= 0.10.0.2 && < 0.11
                 , containers >= 0.5.0.0 && < 0.6
                 , deepseq >= 1.3.0 && < 1.5
                 , directory >= 1.2.0.1 && < 1.4
                 , filepath >= 1.3.0.1 && < 1.5
                 , ghc-prim >= 0.3.0.0 && < 0.6
                 , mtl >= 2.2.1 && < 2.3
                 -- pretty 1.1.1.2 and 1.1.1.3 do not follow the
                 -- package versioning policy.
                 , pretty >= 1.1.1.0 && < 1.1.1.2 || >= 1.1.2 && < 1.2
                 , process >= 1.1.0.2 && < 1.7
                 , regex-compat >= 0.95.1 && < 0.96
                 , safe >= 0.3.5 && < 0.4
                 , text >= 0.11.3.1 && < 1.3
                 , unordered-containers >= 0.2.5.0 && < 0.3
                 , yaml >= 0.8.17 && < 0.9

  -- We don't write an upper bound for cpphs because the `build-tools`
  -- field can not be modified in Hackage.

  -- If your change the lower bound of cpphs also change it in the
  -- `.travis.yml` file.
  build-tools: cpphs >= 1.20.8

  other-modules:
    Apia.ATPs
    Apia.CheckTPTP
    Apia.Common
    Apia.Defaults
    Apia.Dump
    Apia.FOL.Constants
    Apia.FOL.Primitives
    Apia.FOL.Types
    Apia.Monad.Base
    Apia.Monad.Environment
    Apia.Monad.Reports
    Apia.Monad.Utils
    Apia.Options
    Apia.Prelude
    Apia.Snapshot
    Apia.TPTP.ConcreteSyntax
    Apia.TPTP.Files
    Apia.TPTP.Types
    Apia.Translation
    Apia.Translation.Functions
    Apia.Translation.Terms
    Apia.Translation.Types
    Apia.Utils.AgdaAPI.DeBruijn
    Apia.Utils.AgdaAPI.EtaExpansion
    Apia.Utils.AgdaAPI.IgnoreSharing
    Apia.Utils.AgdaAPI.Interface
    Apia.Utils.AgdaAPI.RemoveProofTerms
    Apia.Utils.AgdaAPI.Vars
    Apia.Utils.Except
    Apia.Utils.IO
    Apia.Utils.List
    Apia.Utils.Monad
    Apia.Utils.Name
    Apia.Utils.PrettyPrint
    Apia.Utils.Show
    Apia.Utils.String
    Apia.Utils.Text
    Apia.Utils.CommitVersion
    Apia.Utils.Version
    Paths_apia

  ghc-options: -w
               -Werror
               -- Using cpphs as the C preprocessor.
               -pgmP cpphs -optP --cpp

  if impl(ghc >= 7.6)
     ghc-options: -fwarn-alternative-layout-rule-transitional
                  -- The above option isn't documented in GHC 7.10.1.
                  -fwarn-deprecated-flags
                  -fwarn-dodgy-exports
                  -fwarn-dodgy-foreign-imports
                  -fwarn-dodgy-imports
                  -fwarn-duplicate-exports
                  -fwarn-hi-shadowing
                  -fwarn-identities
                  -fwarn-incomplete-patterns
                  -fwarn-incomplete-record-updates
                  -fwarn-incomplete-uni-patterns
                  -fwarn-missing-fields
                  -- 18 July 2014. We cannot enable this option
                  -- because we are using the Paths_apia module.
                  -- -fwarn-missing-import-lists
                  -fwarn-missing-methods
                  -fwarn-missing-signatures
                  -fwarn-monomorphism-restriction
                  -fwarn-name-shadowing
                  -fwarn-orphans
                  -fwarn-overlapping-patterns
                  -fwarn-tabs
                  -fwarn-type-defaults
                  -fwarn-unrecognised-pragmas
                  -fwarn-unused-binds
                  -fwarn-unused-do-bind
                  -fwarn-unused-imports
                  -fwarn-unused-matches
                  -fwarn-unsupported-calling-conventions
                  -fwarn-warnings-deprecations
                  -fwarn-wrong-do-bind

  if impl(ghc >= 7.8)
     ghc-options: -fwarn-empty-enumerations
                  -fwarn-inline-rule-shadowing
                  -fwarn-overflowed-literals
                  -fwarn-typed-holes
                  -fwarn-unsupported-llvm-version

  -- The following option generates warnings with GHC 7.10.1.
  if impl(ghc < 7.10)
     ghc-options: -fwarn-auto-orphans

  if impl(ghc >= 7.10)
     ghc-options: -fwarn-deriving-typeable
                  -fwarn-unticked-promoted-constructors

  if impl(ghc >= 7.6) && impl(ghc < 8.0)
    ghc-options: -fwarn-missing-local-sigs
                 -- This option will be removed in GHC 8.0.1.
                 -fwarn-pointless-pragmas

  -- This option will be deprected in GHC 8.0.1.
  if impl(ghc >= 7.8) && impl(ghc < 8.0)
    ghc-options: -fwarn-duplicate-constraints

  -- This option will be deprected in GHC 8.0.1.
  if impl(ghc >= 7.10) && impl(ghc < 8.0)
    ghc-options: -fwarn-context-quantification

  if impl(ghc >= 8.0)
    ghc-options: -Wmissing-local-signatures
                 -Wmissing-monadfail-instances
                 -Wmissing-pattern-synonym-signatures
                 -Wnoncanonical-monad-instances
                 -Wnoncanonical-monoid-instances
                 -Wredundant-constraints
                 -Wsemigroup
                 -Wunrecognised-warning-flags
                 -Wunused-foralls

  if impl(ghc >= 8.2)
    ghc-options: -Wcpp-undef
                 -Wsimplifiable-class-constraints
                 -Wunbanged-strict-patterns

  -- From Agda.cabal: If someone installs Agda with the setuid bit
  -- set, then the presence of +RTS may be a security problem (see GHC
  -- bug #3910). However, we sometimes recommend people to use +RTS
  -- to control Agda's memory usage, so we want this functionality
  -- enabled by default.
  ghc-options: -rtsopts

  ghc-prof-options: -fprof-auto

-- From Agda.cabal:
--
-- Cabal testsuite integration has some serious bugs, but we
-- can still make it work. See also:
-- https://github.com/haskell/cabal/issues/1938
-- https://github.com/haskell/cabal/issues/2214
-- https://github.com/haskell/cabal/issues/1953
--
-- This test suite should only be run using the Makefile.

test-suite apia-tests
  type:            exitcode-stdio-1.0
  hs-source-dirs:  test
  main-is:         Main.hs

  other-modules:   Fail.Errors.Test
                 , Succeed.NonConjectures.Test
                 , Utils

  build-depends:  base         >= 4.6.0.1  && < 4.11
                , directory    >= 1.2.0.1  && < 1.4
                , filepath     >= 1.3.0.1  && < 1.5
                , tasty        >= 0.10     && < 0.12
                , tasty-silver >= 3.1.8    && < 3.2
                , text         >= 0.11.3.1 && < 1.3

  default-language: Haskell2010

  ghc-options: -w
               -Werror
               -- Using cpphs as the C preprocessor.
               -pgmP cpphs -optP --cpp

  if impl(ghc >= 7.6)
     ghc-options: -fwarn-alternative-layout-rule-transitional
                  -- The above option isn't documented in GHC 7.10.1.
                  -fwarn-deprecated-flags
                  -fwarn-dodgy-exports
                  -fwarn-dodgy-foreign-imports
                  -fwarn-dodgy-imports
                  -fwarn-duplicate-exports
                  -fwarn-hi-shadowing
                  -fwarn-identities
                  -fwarn-incomplete-patterns
                  -fwarn-incomplete-record-updates
                  -fwarn-incomplete-uni-patterns
                  -fwarn-missing-fields
                  -- 18 July 2014. We cannot enable this option
                  -- because we are using the Paths_apia module.
                  -- -fwarn-missing-import-lists
                  -fwarn-missing-methods
                  -fwarn-missing-signatures
                  -fwarn-monomorphism-restriction
                  -fwarn-name-shadowing
                  -fwarn-orphans
                  -fwarn-overlapping-patterns
                  -fwarn-tabs
                  -fwarn-type-defaults
                  -fwarn-unrecognised-pragmas
                  -fwarn-unused-binds
                  -fwarn-unused-do-bind
                  -fwarn-unused-imports
                  -fwarn-unused-matches
                  -fwarn-unsupported-calling-conventions
                  -fwarn-warnings-deprecations
                  -fwarn-wrong-do-bind

  if impl(ghc >= 7.8)
     ghc-options: -fwarn-empty-enumerations
                  -fwarn-inline-rule-shadowing
                  -fwarn-overflowed-literals
                  -fwarn-typed-holes
                  -fwarn-unsupported-llvm-version

  -- The following option generates warnings with GHC 7.10.1.
  if impl(ghc < 7.10)
     ghc-options: -fwarn-auto-orphans

  if impl(ghc >= 7.10)
     ghc-options: -fwarn-deriving-typeable
                  -fwarn-unticked-promoted-constructors

  if impl(ghc >= 7.6) && impl(ghc < 8.0)
    ghc-options: -fwarn-missing-local-sigs
                 -- This option will be removed in GHC 8.0.1.
                 -fwarn-pointless-pragmas

  -- This option will be deprected in GHC 8.0.1.
  if impl(ghc >= 7.8) && impl(ghc < 8.0)
    ghc-options: -fwarn-duplicate-constraints

  -- This option will be deprected in GHC 8.0.1.
  if impl(ghc >= 7.10) && impl(ghc < 8.0)
    ghc-options: -fwarn-context-quantification

  if impl(ghc >= 8.0)
    ghc-options: -Wmissing-local-signatures
                 -Wmissing-monadfail-instances
                 -Wmissing-pattern-synonym-signatures
                 -Wnoncanonical-monad-instances
                 -Wnoncanonical-monoid-instances
                 -Wredundant-constraints
                 -Wsemigroup
                 -Wunrecognised-warning-flags
                 -Wunused-foralls

  if impl(ghc >= 8.2)
    ghc-options: -Wcpp-undef
                 -Wsimplifiable-class-constraints
                 -Wunbanged-strict-patterns
